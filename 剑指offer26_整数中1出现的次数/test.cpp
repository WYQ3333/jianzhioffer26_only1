#include<iostream>
#include<vector>

using namespace std;

class Solution1 {
public:
	int NumberOf1Between1AndN_Solution(int n)
	{
		int i = 0;
		int result = 1;
		if (n == 0){
			return 0;
		}
		if (n < 10&&n>0){
			return 1;
		}
		for (i = 10; i <= n; ++i){
			int temp = i;
			while (temp){
				if (temp % 10 == 1){
					++result;
				}
				temp = temp / 10;
			}
		}
		return result;
	}
};

class Solution {
public:
	    int NumberOf1Between1AndN_Solution(int n) {
		int count = 0;//1的个数
		int i = 1;//当前位
		int current = 0, after = 0, before = 0;
		while ((n / i) != 0){
			current = (n / i) % 10; //高位数字
			before = n / (i * 10); //当前位数字
			after = n - (n / i)*i; //低位数字
			//如果为0,出现1的次数由高位决定,等于高位数字 * 当前位数
			if (current == 0)
				count += before*i;
			//如果为1,出现1的次数由高位和低位决定,高位*当前位+低位+1
			else if (current == 1)
				count += before * i + after + 1;
			//如果大于1,出现1的次数由高位决定,//（高位数字+1）* 当前位数
			else{
				count += (before + 1) * i;
			}
			//前移一位
			i = i * 10;
		}
		return count;
	}
};

void TestFunc(){
	Solution s;
	cout << s.NumberOf1Between1AndN_Solution(0) << endl;
}

int main(){
	TestFunc();
	system("pause");
	return 0;
}